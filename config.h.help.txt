Файл config.h

После редактирования config.h для активации изменений достаточно выполнить: make && sudo make install. 
Первые несколько строк задают шрифт и цвета.

static const unsigned int borderpx  = 1;                        /* ширина границ окна  */         

static const char *fonts[]          = { "monospace:size=10" };  /* шрифт */
static const char dmenufont[]       = "monospace:size=10";      /* шрифт dmenu */    
static const char col_gray1[]       = "#222222";                /* цвет фона */
static const char col_gray2[]       = "#444444";                /* цвет границ активного окна */ 
static const char col_gray3[]       = "#bbbbbb";                /* цвет текста в статус баре */
static const char col_gray4[]       = "#eeeeee";                /* цвет текста заголовка окна */
static const char col_cyan[]        = "#005577";                /* цвет фона заголовка окна */
static const char *colors[][3]      = {
	/*               fg         bg         border   */
	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },

static const float mfact     = 0.50;                            /* Это означает, что размер мастер окна будет 50% от ширины экрана. */

Правила:

static const Rule rules[] = {
	/* xprop(1):
	 *	WM_CLASS(STRING) = instance, class
	 *	WM_NAME(STRING) = title
	 */
	/* class      instance    title       tags mask     isfloating   monitor */
	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
	{ "Surf",     NULL,	  NULL,       1 << 8,       0,           -1 },
};

"1 << 8" означает, что Firefox будет запускаться на девятом теге ("9"), "0" означает, что Gimp будет запускаться сразу на всех тегах. Таким образом добавляете в правила приложения, которые вы используете и каждое будет запускаться только там, где надо.

/* key definitions */
#define MODKEY Mod4Mask                                                /* клавиша "модификатор" (win) */
 
Настройка горячих клавиш мультимедиа клавиатуры в dwm 
Делается это в три шага
1) Узнаем код клавиши с помощью утилиты xev 
2) Добавляем команду в config.h 
3) Добавляем сочетание клавиш в config.h, которое будет вызывать эту команду 

Как использовать xev. Запускаете xev в терминале и жмете нужную клавишу. Вы увидите нечто подобное:
KeyPress event, serial 30, synthetic NO, window 0x1200001,
root 0x15b, subw 0x0, time 235999518, (370,513), root:(371,528),
state 0x0, keycode 64 (keysym 0xffe9, Alt_L), same_screen YES,
Вам нужно значение keysym. 

/* commands */
static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
static const char *termcmd[]  = { "st", NULL };
/* Определили путь к скрипту */
#define FIND_APP_SH "/home/pi/.bin/find_app.sh"
/* Команда запуска browser: */
static const char *browsercmd[]  = { FIND_APP_SH, "surf", NULL };
/* Команда запуска file manager: */
static const char *file_manager[]  = { FIND_APP_SH, "pcmanfm", NULL };
/* Команда для получения скриншота: */
static const char *scrotcmd[]  = { "scrot", "/home/alex/screenshots/%Y-%m-%d-%T-screenshot.png", NULL };
/* Jgmenu: */
static const char *jgmenu[]  = { FIND_APP_SH, "jgmenu_run", NULL };
/* Команды управления громкостью: */
/* Громкость выше на 5% */
static const char *volupcmd[]  = { "amixer", "-D", "pulse", "sset", "Master", "5%+", "unmute", NULL };
/* Громкость ниже на 5% */
static const char *voldowncmd[]  = { "amixer", "-D", "pulse", "sset", "Master", "5%-", "unmute", NULL };
/* Вкл/выкл звук */
static const char *volmutecmd[]  = { "amixer", "-D", "pulse", "sset", "Master", "toggle", NULL };

/* My */
	{ MODKEY,                       0xff61,      spawn,          {.v = scrotcmd } },
	{ MODKEY|ShiftMask,             XK_b,        spawn,          {.v = browsercmd } },
	{ MODKEY|ShiftMask,             XK_f,        spawn,          {.v = file_manager } },
	{ MODKEY|ShiftMask,             XK_m,        spawn,          {.v = jgmenu } },
	{ NULL,                         0x1008ff13,  spawn,          {.v = volupcmd } },
	{ NULL,                         0x1008ff11,  spawn,          {.v = voldowncmd } },
	{ NULL,                         0x1008ff12,  spawn,          {.v = volmutecmd } },
        
